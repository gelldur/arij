buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

apply plugin: 'com.android.application'
apply plugin: 'android-apt'
def AAVersion = '3.2'

dependencies {
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile "com.google.guava:guava:13.0.1"
    compile "com.squareup.retrofit:retrofit:1.2.2"
    compile 'com.android.support:support-v4:19.1.+'
    compile "org.ocpsoft.prettytime:prettytime:3.0.2.Final"
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'com.tadamski.arij'
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        applicationId "com.tadamski.arij"
        minSdkVersion 15
        targetSdkVersion 19
        versionCode 17
        versionName "1.3.2"
    }

    def releaseConfigProperty = "ArijRelease.properties"
    def releaseConfigFile = new File(System.getProperty("user.home") + File.separator + project.property(releaseConfigProperty))
    def hasReleaseConfig = project.hasProperty(releaseConfigProperty) && releaseConfigFile.exists()
    if (hasReleaseConfig) {
        signingConfigs {
            Properties props = new Properties()
            props.load(new FileInputStream(releaseConfigFile))
            release {
                storeFile new File(props['RELEASE_STORE_FILE'])
                storePassword props['RELEASE_STORE_PASSWORD']
                keyAlias props['RELEASE_KEY_ALIAS']
                keyPassword props['RELEASE_KEY_PASSWORD']
            }
        }
    }

    buildTypes {
        if (hasReleaseConfig) {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
